/*You are given two non-empty linked lists representing two non-negative integers. 
The digits are stored in reverse order, and each of their nodes contains a single digit.
Add the two numbers and return the sum as a linked list.*/

Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.8

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]
*/

ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode*head=new ListNode(0);
        ListNode*l3=head;
        int res=0;
        int carry=0;
        while(l1!=NULL and l2!=NULL)
        {    
            res=l1->val+l2->val;
            if (carry==1)
            {
                res+=1;
                carry=0;
            }
            if(res>=10)
            {
                res=res%10;
                carry=1;
            }
            l3 -> next = new ListNode(res);
            l1=l1->next;
            l2=l2->next;
             l3 = l3 -> next; 
        }
        if(l1==NULL)
        {
            while(l2!=NULL)
            {
                 res=l2->val;
                if (carry==1)
                {
                    res+=1;
                    carry=0;
                }
                if(res>=10)
                {
                    res=res%10;
                    carry=1;
                }
                l3 -> next = new ListNode(res);
                l2=l2->next;
                l3=l3->next;
            }
        }
        else{
            while(l1!=NULL)
            {
                 res=l1->val;
                if (carry==1)
                {
                    res+=1;
                    carry=0;
                }
                if(res>=10)
                {
                    res=res%10;
                    carry=1;
                }
                l3 -> next = new ListNode(res);
                l1=l1->next;
                l3=l3->next;
            }
        }
        if (carry==1)
        {
            l3 -> next = new ListNode(1);
        }
        
        return head->next;
    }
